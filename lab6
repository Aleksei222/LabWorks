{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO7ChMd62Jp1aC0SjB+CNJW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"4zmhUEPmtSMT","executionInfo":{"status":"error","timestamp":1731323019226,"user_tz":-180,"elapsed":319,"user":{"displayName":"Алексей Пшеничный","userId":"14459870077271944159"}},"outputId":"36ee45c9-dd5b-4d38-bcf7-516ec8be842d"},"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n"]},{"output_type":"error","ename":"PermissionError","evalue":"Incorrect old password","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mPermissionError\u001b[0m                           Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-782f262b052f>\u001b[0m in \u001b[0;36m<cell line: 17>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_password\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"What is password\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"good password\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheck_password\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"What is password\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m \u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_password\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"What is password\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"hahaha\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-20-782f262b052f>\u001b[0m in \u001b[0;36mset_password\u001b[0;34m(self, old_password, new_password)\u001b[0m\n\u001b[1;32m      8\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__password\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_password\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0mPermissionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Incorrect old password\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mcheck_password\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpassword\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__password\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mpassword\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mPermissionError\u001b[0m: Incorrect old password"]}],"source":["class UserAccount:\n","  def __init__(self, username, email, password):\n","    self.username = username\n","    self.email = email\n","    self.__password = password\n","  def set_password(self, old_password, new_password):\n","    if self.check_password(old_password):\n","      self.__password = new_password\n","    else:\n","      raise PermissionError(\"Incorrect old password\")\n","  def check_password(self, password):\n","    return self.__password == password\n","user = UserAccount(\"Ivashka\", \"Ivashka@gmail.com\", \"What is password\")\n","print(user.check_password(\"What is password\"))\n","user.set_password(\"What is password\", \"good password\")\n","print(user.check_password(\"What is password\"))\n","user.set_password(\"What is password\", \"hahaha\")"]},{"cell_type":"code","source":["class Vehicle:\n","  def __init__(self, make, model):\n","    self.make = make\n","    self.model = model\n","  def get_info(self):\n","    return f\"brand: {self.make}\\nmodel: {self.model}\"\n","vehicle = Vehicle(\"mers\", \"gelik\")\n","print(vehicle.get_info())\n","\n","class Car(Vehicle):\n","  def __init__(self, make, model, fuel_type):\n","    super().__init__(make, model)\n","    self.fuel_type = fuel_type\n","  def get_info(self):\n","    return super().get_info() + f\"\\nfuel_type: {self.fuel_type}\"\n","car = Car(\"Lada\", \"2109\", \"bensin\")\n","print(car.get_info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"732JlZg2wBxk","executionInfo":{"status":"ok","timestamp":1731323105394,"user_tz":-180,"elapsed":347,"user":{"displayName":"Алексей Пшеничный","userId":"14459870077271944159"}},"outputId":"e92f4d55-7a99-4042-b6ad-7d17e4e3dcf2"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["brand: mers\n","model: gelik\n","brand: Lada\n","model: 2109\n","fuel_type: bensin\n"]}]}]}